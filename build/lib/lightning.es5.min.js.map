{"version":3,"file":"lightning.es5.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n        const reversedPos = this._layout.mainAxisSize - endPos;\n        item.flexItem._setMainAxisLayoutPos(reversedPos);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = Utils.isSpark ? this._stage.platform.getFontSetting(this) : this._getFontSetting();\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _getFontSetting() {\n        let ff = this._settings.fontFace;\n\n        if (!Array.isArray(ff)) {\n            ff = [ff];\n        }\n\n        let ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === \"serif\" || ff[i] === \"sans-serif\") {\n                ffs.push(ff[i]);\n            } else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(\",\")}`\n    }\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || (2048 / this.getPrecision());\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth += (10 - innerWidth);\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        let lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        let realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            let resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth - indent;\n            let words = lines[i].split(' ');\n            for (let j = 0; j < words.length; j++) {\n                const wordWidth = this.measureText(words[j], letterSpacing);\n                const wordWidthWithSpace = wordWidth + this.measureText(' ',letterSpacing);\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += words[j];\n                    spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += ' ' + words[j];\n                }\n            }\n\n            resultLines.push(result);\n            result = '';\n\n            allLines = allLines.concat(resultLines);\n\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n\n        return {l: allLines, n: realNewlines};\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n    \n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = Utils.isSpark ? this._stage.platform.getFontSetting(this) : this._getFontSetting();\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _getFontSetting() {\n        let ff = this._settings.fontFace;\n\n        if (!Array.isArray(ff)) {\n            ff = [ff];\n        }\n\n        let ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === \"serif\" || ff[i] === \"sans-serif\") {\n                ffs.push(ff[i]);\n            } else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(\",\")}`\n    }\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : 2048 / precision;\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'middle') {\n            vaOffset += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset += renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (lastWord == ' ' || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont)[0];\n            suffix.lineNo = index;\n            if (lastLineText.length) {\n                suffix.x = lastLineText[lastLineText.length - 1].x + lastLineText[lastLineText.length - 1].width;\n            } else {\n                suffix.x = 0;\n            }\n            lastLineText.push(suffix)\n\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || lastLineText[lastLineText.length - 2].text == ' ') {\n                lastLineText.splice(lastLineText.length - 2, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                const prev = lastLineText[lastLineText.length - 2] || {x: 0, width: 0}\n                suffix.x = prev.x + prev.width;\n                if (lastLineText.length < 2) {\n                    break;\n                }\n            }\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum; \n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n \n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n\n    tokenize(text) {\n        const re =/ |\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g\n    \n        const delimeters = text.match(re) || [];\n        const words = text.split(re) || [];\n    \n        let final = [];\n        for (let i = 0; i < words.length; i++) {\n            final.push(words[i], delimeters[i])\n        }\n        final.pop()\n        return final.filter((word) => word != '');\n    \n    }\n    \n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(?<color>0[xX][0-9a-fA-F]{8})/;\n    \n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                colorStack.push(StageUtils.getRgbaString(parseInt(colorRegexp.exec(t).groups['color'])));\n                color += 1;\n                t = '';\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        // Inherit font face from stage.\n        if (args.fontFace === null) {\n            args.fontFace = this.stage.getOption('defaultFontFace');\n        }\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index < this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource ? this.__core.displayedTextureSource._source : null;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOfScreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n            this._program = null;\n        }\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n            }\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = {format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE};\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2/w, 2/h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n    \n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n\n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n\n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    loop() {\n        let self = this;\n        let lp = function() {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.drawFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n            const ctx = source.getContext('2d');\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    loadSrcTexture({src, hasAlpha}, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function(err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function({imageBitmap, hasAlphaChannel}) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: {src: src},\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function() {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0,5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function(err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function() {\n                cb(null, {\n                    source: image,\n                    renderInfo: {src: src},\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function() {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts);\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n    \n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            const pixels = new Uint8Array(4);\n            const gl = this.stage.gl;\n            gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch(e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp',{precision:0.6666666667, fontSize: 24})\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n    drawFrame() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n\n        this.emit('frameStart');\n\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n\n        this.emit('update');\n\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    renderFrame() {\n        this.ctx.frame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y){\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x,y,children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while(true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while(n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true; \n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                child._handleClick(target);\n                break;\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a,b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1: -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision();\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onError = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n"],"names":["StageUtils","v1","v2","p","r","g","b","a","color","toFixed","Math","floor","argb","rgba","max","min","v","c1","c2","round","c","t","n","length","i","r1","g1","b1","a1","alpha","deg","PI","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","str","getTimingBezier","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","Utils","value","isObjectLiteral","Array","isArray","getDeepClone","obj","keys","Object","clone","obj1","obj2","type","constructor","index","arr","getModuloIndex","len","ceil","isFunction","isObject","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","this","result","forEach","push","iterator","iteratorResult","next","done","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","isNode","isPS4","Base","name","settings","names","patchObjectProperty","error","setter","setSetting","defaultSetter","charAt","__local","func","SpacingCalculator","mode","numberOfItems","remainingSpace","spacePerGap","spacingBefore","spacingBetween","itemGaps","getSpacing","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_lines","_getTotalCrossAxisSize","crossAxisSize","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","align","recursiveResizeOccured","setItemPositions","total","FlexUtils","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","funcW","_allowRelAxisSizeFunction","getParentAxisSizeWithPadding","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","x","y","pos","size","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","getAxisMinSize","flexItem","shrink","getRelAxisSize","_horizontal","resizeMainAxis","resizeCrossAxis","setAxisLayoutSize","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","marginTop","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","SizeGrower","_grownSize","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","grow","maxSize","_getMainAxisMaxSizeSetting","maxGrow","ItemPositioner","lineLayout","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","getGrownSize","shrinker","getShrunkSize","position","_calcCrossAxisMaxLayoutSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","_getCrossAxisMinSize","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","performLayout","resizingMainAxis","isMainAxisFitToContents","crossAxisMinSize","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","getMainAxisMinSize","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","getAxisLayoutPos","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","finalize","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","layoutLines","mainAxisContentSize","init","totalCrossAxisSize","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","isZeroAxisSize","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","ctr","getPaddingOffset","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","changedDimensions","changedContents","f","direction","_changedContents","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","_changedDimensions","patchObject","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","setAxisLayoutPos","resizeAxis","getTotalMargin","getMarginOffset","_getMainAxisPadding","_getMainAxisMargin","_getCrossAxisLayoutSize","FlexTarget","_target","_recalc","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","isChanged","layoutTree","_enableFlex","patch","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","from","to","isFlexContainer","_changedChildren","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","shrunk","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","has","add","delete","becomesUsed","becomesUnused","cb","texture","elements","element","active","isUsed","load","cancel","isLoading","free","forceSync","isResultTexture","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","update","frameCounter","forEachActiveElement","forceRenderUpdate","_updateTextureCoords","newNativeTexture","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","forEachEnabledElement","_updateDimensions","e","onTextureSourceLoadError","isLoaded","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","setHasRenderUpdates","_setRecalc","textureManager","updateResultTexture","hasEnabledElements","resultTexture","getResultTexture","nativeTexture","replaceNativeTexture","core","_hasRenderUpdates","release","releaseRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","hasFlexLayout","_disableFuncX","setOriginalXWithoutUpdatingLayout","_updateLocalTranslateDelta","forceLayout","_triggerRecalcTranslate","_disableFuncY","setOriginalYWithoutUpdatingLayout","_updateLocalTransform","scaleX","_updateLocalTranslate","prev","_updateLocalAlpha","_updateEnabledFlag","setVisible","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","child","splice","removed","added","order","fromIndex","toIndex","isEstimate","ulx","uly","brx","bry","textureSource","root","coordsWidth","coordsHeight","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","prevZContext","_getZIndexedDescs","isAncestorOf","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","prevShader","shader","defaultShader","texturizer","_enableRenderToTexture","_disableRenderToTexture","_setShaderOwnerChildrenRecursive","_renderAdvanced","_stashedTexCoords","_stashedColors","layoutFlexTree","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","_hasRenderContext","updateTreeOrder","useRenderToTexture","mustRenderToTexture","sx","sy","ex","ey","bboxW","bboxH","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","renderOffscreen","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","activeShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","hasRenderTexture","cleared","ignore","cache","hasResultTexture","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","reuseTextureAsRenderTexture","renderTextureReused","getRenderTexture","setTexturizer","_stashTexCoords","colorize","_stashColors","_unstashColors","_unstashTexCoords","ptr","m","j","sort","mergeResult","relX","relY","inBound","inScissor","collectAtCoord","tx","ty","getCornerPoints","sc","_ensureLayout","EventEmitter","_hasEventListeners","listener","_eventFunction","_eventListeners","combiner","wrapper","arg1","arg2","arg3","off","__originalFunc","on","current","l","listeners","map","object","addAsMixin","cls","once","removeListener","emit","listenerCount","removeAllListeners","Shader","coreContext","_initialized","_elements","cleanup","renderer","createShader","isShader","isValidShaderType","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","clipping","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","addTexture","incActiveCount","removeTexture","decActiveCount","_checkForNewerReusableTextureSource","incActiveTextureCount","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","decActiveTextureCount","_getIsValid","_updateSource","addUpdateSourceTexture","_getTextureSource","_getLookupId","getTextureSource","_getSourceLoader","getReusableTextureSource","newSource","oldSource","loadError","clipX","clipY","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","scaleY","scale","desiredSize","choppedOffPixels","_clearResizeMode","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","nonDefaults","precision","isAutosizeTexture","getRenderWidth","getRenderHeight","isTexture","ImageTexture","_src","_hasAlpha","src","hasAlpha","getOption","fc","charCodeAt","platform","loadSrcTexture","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","font","getFontSetting","_getFontSetting","textBaseline","ff","fontFace","ffs","fontStyle","fontSize","getPrecision","document","fonts","fontSetting","check","text","catch","then","loadPromise","_load","drawText","_draw","offsetY","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","setFontProperties","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","measureText","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","_calculateRenderInfo","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","getRgbaString","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","word","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","allLines","realNewlines","resultLines","spaceLeft","words","wordWidthWithSpace","concat","space","reduce","acc","char","TextTextureRendererAdvanced","baseFont","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","vaOffset","firstWord","lastWord","shift","pop","lastLineText","filter","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","letters","re","delimeters","match","final","tokens","italic","bold","colorStack","colorRegexp","test","exec","groups","o","parsed","applyFontStyle","breakIndex","totalWidth","_getBreakIndex","TextTexture","_this","_text","_fontStyle","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","toString","advancedRenderer","args","cloneArgs","gl","getDrawingCanvas","draw","texParams","sharpCfg","sharpen","isBoolean","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","targetValue","isAttached","reset","delay","_updateDrawValue","removeActive","stop","addActive","getDrawValue","attached","dt","delayLeft","duration","invokeListeners","timingFunctionImpl","_timingFunctionImpl","startValue","isTransition","ObjectList","_refs","addAt","currentIndex","createItem","setAt","ref","onAdd","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","removeAt","onRemove","onSync","isItem","_setByObject","_setByArray","refs","_getRefs","crefs","cref","idx","array","same","_equalsArray","marker","newItems","_setItems","prevItems","get","ElementChildList","prevChildList","childList","removeChildAt","_setParent","_connectParent","addChildAt","gc","syncChildren","setChildAt","moveChild","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","isUcChar","_throwError","removeTag","clearRef","_addTag","setRef","setAsRoot","_updateAttachedFlag","isRoot","_unsetTagsParent","_setTagsParent","_updateCollision","depth","levels","getDepth","getAncestor","o1","o2","l1","l2","_isEnabled","withinBoundsMargin","newAttached","_isAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","addElement","_setActiveFlag","_unsetActiveFlag","removeElement","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","deactivate","_onInactive","_getRenderWidth","_getRenderHeight","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","setDisplayedTextureSource","unknownSize","_onResize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","ph","tempty","setTextureCoords","tag","tags","iteratorToArray","tagSet","parentTreeTags","comp","Map","set","setToArray","removes","adds","hasTag","currentTags","addTag","list","mtag","values","_tag","res","_getByTag","level","resn","path","select","selectors","_select","isRef","pointIdx","arrowIdx","_selectChilds","subPath","localTags","getTags","getLocationString","getSettings","getPrettyString","getNonDefaults","childArray","missing","pivotX","pivotY","pivot","mountX","mountY","mount","rotation","colorUl","colorUr","colorBl","colorBr","forceZIndexContext","clipbox","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","boundsMargin","offsetX","disableFuncW","disableFuncH","_collision","collision","setTags","_allowChildrenAccess","rectangleTexture","enableTextTexture","isString","onUpdate","onAfterCalcs","onAfterUpdate","create","rtt","paths","firstCharCode","remove","message","animations","createAnimation","_getTransition","_setTransition","transition","setSmooth","_transitions","finish","isTransitionSettings","transitions","defaultTransitionSettings","createSettings","_removeTransition","start","tree","hasChildren","collectChildren","getProperties","colorKeys","JSON","stringify","k","childStr","isEmpty","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","toLowerCase","isColorProperty","mergeColors","mergeNumbers","getAt","properties","props","key","StateMachine","setupStateMachine","event","_hasMethod","_state","__path","statePath","currentStatePath","state","_sm","getStateByPath","currentState","__level","stateAtLevel","_getStateAtLevel","member","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","context","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","apply","_stateIndex","__index","_routedType","memberNames","cur","memberName","StateMachineType","getStateMemberAlias","targetConstructor","router","setPrototypeOf","_initStateMachine","stateMachineType","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","arguments","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","isValid","curState","getPrototypeOf","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","stateMap","members","_getStateMemberNames","_getStateMemberNamesForType","_isStateLocalMember","_createStateMap","_addState","parentState","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","__supportsSpread","Component","tagRoot","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","_getState","application","updateFocusPath","propObj","targetObj","targetProp","prop","propDependencies","propName","__func","_this2","__obj","__prop","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","newTarget","prevTarget","_focusPath","cparent","ancestor","getSharedAncestor","isComponent","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","startsWith","_doFireAncestors","fire","__propertyBinding","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","isNumber","subs","collectSubComponents","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","CoreQuadOperation","shaderOwner","scissor","quads","getTexture","getElementCore","getElement","renderWidth","renderHeight","getTextureWidth","getTextureHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","getAttribsDataByteOffset","coords","getRenderTextureCoords","renderExec","_projection","projection","CoreRenderExecutor","_bindRenderTexture","_setScissor","_clearRenderTexture","_reset","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","addEmpty","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","clear","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","useDefault","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","location","getUniformLocation","getAttribLocation","glFunction","_valueEquals","clonedValue","_valueClone","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","call","WebGLShader","shaderPrograms","glProgram","initialize","compile","setUniformValue","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getProjection","_getProjection","DefaultShader","vertexAttribPointer","_attrib","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","_setUniform","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","WebGLRenderer","shaderProgram","destroy","getWebGL","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","deleteFramebuffer","deleteTexture","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","RGB","uploadGlTexture","cloneObjShallow","mca","mergeColorAlpha","cx","cy","extra","setExtraAttribsInBuffer","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","C2dCoreQuadOperation","getRenderContext","getSimpleTc","getWhite","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","getRgbaStringFromArray","globalCompositeOperation","beginPath","rect","closePath","fill","clearRect","restore","save","_equalScissorAreas","_restoreContext","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","mergeMultiColorsEqual","rgb","tintTexture","getTintTexture","drawImage","gradient","transparency","createLinearGradient","addColorStop","getRgbString","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","delta","addMemoryUsage","_hasCache","_getCache","prevMemUsage","memoryUsage","_addMemoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","getC2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","setRenderContext","setWhite","isWhite","setSimpleTc","hasSimpleTexCoords","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_imageWorker","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","loop","requestAnimationFrame","lp","drawFrame","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","cancelCb","isPng","Image","crossOrigin","removeAttribute","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","performance","now","changes","keyhandler","_keydownListener","addEventListener","_keyupListener","removeEventListener","clickHandler","_clickListener","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","cap","DITHER","_getDefaultFlag","change","program","va","equal","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","pname","param","_getPixelStoreiIndex","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","migrate","setProgram","fb","setBuffer","setFramebuffer","setRenderbuffer","setFlag","normalized","stride","setActiveTexture","setPixelStorei","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","red","green","blue","_blendColor","_blendEquation","modeRGB","modeAlpha","_blendEquationSeparate","sfactor","dfactor","_blendFunc","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","_clearColor","_clearDepth","_clearStencil","_colorMask","_cullFace","_depthFunc","flag","_depthMask","zNear","zFar","_depthRange","_frontFace","_lineWidth","factor","units","_polygonOffset","invert","_sampleCoverage","_stencilFunc","_stencilMask","_stencilOp","indx","_vertexAttrib1f","_vertexAttrib1fv","_vertexAttrib2f","_vertexAttrib2fv","z","_vertexAttrib3f","_vertexAttrib3fv","_vertexAttrib4f","_vertexAttrib4fv","__proto__","method","_initStateManager","TextureManager","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","allowCleanup","_freeManagedTextureSource","managed","clearNativeTexture","TextureThrottler","_remove","_sources","_data","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","createCoreRenderState","createCoreRenderExecutor","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","zSort","_fillRenderState","pixels","Uint8Array","readPixels","_performRender","execute","prec","_createRenderTexture","maxAge","limit","createRenderTexture","freeRenderTexture","copyRenderTexture","TransitionSettings","_timingFunction","getTimingFunction","TransitionManager","progress","isRunning","_toConsumableArray","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","last","pe","idp","sm","pi","ni","nc","getRgbaComponents","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","getArgbNumber","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getValue","getAnimatedElements","sv","getResetValue","hasColorProperty","selector","resetValue","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","aas","action","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","play","STOPPED","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","stopTimingFunctionImpl","AnimationManager","RectangleTexture","Stage","_setOptions","_lastGcFrame","platformType","isWebglSupported","createWebGLContext","createCanvasContext","_mode","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","opt","app","log","startLoop","stopLoop","_updatingFrame","getHrTime","fixedDt","processSome","nextFrame","getRgbaComponentsNormalized","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","freeUnusedRenderTextures","serviceprovider","addServiceProvider","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","registerKeydownHandler","_receiveKeydown","registerKeyupHandler","_receiveKeyup","registerClickHandler","_receiveClick","registerHoverHandler","_receiveHover","_recieveScrollWheel","__options","setApplication","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","_focus","_unfocus","_focusChange","focusedComponent","focusSettings","defaultSetFocusSettings","_setFocusSettings","defaultHandleFocusSettings","_handleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","_getFocused","newParts","events","focusPath","_getMostSpecificHandledMember","returnValue","keyCode","hasTimer","longpress","focusTopDownEvent","focusBottomUpEvent","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","getAncestors","_this5","elem","_handleUnhover","style","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","_this8","cw","finalW","ch","finalH","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","factory","Tools","canvasFactory","content","radius","strokeWidth","strokeColor","fillColor","createRoundRect","getCanvasTexture","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","blur","margin","createShadowRect","url","createSvg","img","ObjMerger","__mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","isMf","merge","ObjectListProxy","ObjectListWrapper","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","innerHTML","htmlElement","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","StaticTexture","ListComponent","_get","_reloadVisibleElements","_visibleItems","_index","_started","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","ListItems","_scrollTransition","setIndex","immediate","closest","nElements","realIndex","diff","viewportSize","scrollDelta","ps","wasVisible","invisibleItem","getWrapper","checkStarted","ri","LinearBlurShader","_direction","_kernelRadius","redraw","uniform1i","BoxBlurShader","BlurShader","_amount","FastBlurComponent","_paddingX","_paddingY","_updateBlurSize","Wrap","WebGLFastBlurComponent","C2dFastBlurComponent","_textwrap","sel","paddingX","paddingY","kernelRadius","_amountToKernelRadius","Textwrap","C2dBlurShader","Content","_multiSpline","getSpline","_layers","_output","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","_buildLayers","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomComponent","BloomBase","BloomBaseShader","SmoothScaleComponent","_smoothScale","_iterations","its","_setIterations","scalers","useScalers","ContentWrap","Scale","contentWrap","BorderComponent","_borderTop","_borderRight","_borderBottom","_borderLeft","first","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","Borders","Top","Right","Bottom","Left","WebGLGrayscaleShader","C2dGrayscaleShader","WebGLDefaultShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","getElementWidth","getElementHeight","getVertexAttribPointerOffset","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","num","_sc","renderPrecision","renderContext","FadeOutShader","_fade","fade","VignetteShader","_magnitude","_intensity","_pivot","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","_radiusY","innerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","PerspectiveShader","MagnifierShader","_magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","bool","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","components","tools","lng"],"mappings":"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"}